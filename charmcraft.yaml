# Copyright 2024 Canonical, Ltd.
# See LICENSE file for licensing details.
name: keystone-k8s-auth
title: Keystone K8s Authentication Operator
summary: Runs the Keystone Kubernetes Authenticator in the cluster.
description: Runs the Keystone Kubernetes Authenticator in the cluster.
links:
  contact: https://launchpad.net/~containers
  documentation: https://discourse.charmhub.io/t/keystone-k8s-auth/14554
  issues:
  - https://bugs.launchpad.net/keystone-k8s-auth-operator
  source:
  - https://github.com/canonical/keystone-k8s-auth-operator

type: charm
subordinate: true
requires:
  juju-info:
    # This charm is a subordinate charm so requires a primary to host it
    # Its intended to be linked to a kubernetes control-plane unit as the primary
    interface: juju-info
    scope: container
  keystone:
    interface: keystone-credentials
    limit: 1
  kube-control:
    interface: kube-control
    limit: 1
  certificates:
    interface: tls-certificates

bases:
- build-on:
  - name: ubuntu
    channel: "20.04"
    architectures: [amd64]
  run-on:
  - name: ubuntu
    channel: "20.04"
    architectures: [amd64, arm64, s390x]
  - name: ubuntu
    channel: "22.04"
    architectures: [amd64, arm64, s390x]
  - name: ubuntu
    channel: "24.04"
    architectures: [amd64, arm64, s390x]

config:
  options:
    extra-args:
      type: string
      description: |
        (Optional) Extra arguments to pass to the k8s-keystone-auth deployment.
        Argument string will be split by shlex rules
        For example: `juju config keystone-k8s-auth extra-args='--debug'`

    keystone-ssl-ca:
      type: string
      description: |
        (Optional) Keystone certificate authority encoded in base64 for securing communications to Keystone.

        If the CA cert provided via the certificates relation is not sufficient, this option can be used to provide a custom CA cert.
        The certificate should be in PEM format, encoded in base64 is optional.
        For example: `juju config keystone-k8s-auth keystone-ssl-ca=$(base64 /path/to/ca.crt)`

    keystone-policy-configmap:
      type: string
      description: |
        https://github.com/kubernetes/cloud-provider-openstack/blob/a59b8a28d23b1f265eb066e760b56d72ad29e91f/examples/webhook/keystone-policy-configmap.yaml
        This is used to configure the k8s-keystone-auth service.
        The ConfigMap will be created in the same namespace as the k8s-keystone-auth service.
      default: |-
        [
          {
            "users": {
              "projects": ["demo"],
              "roles": ["member"]
            },
            "resource_permissions": {
              "*/pods": ["get", "list", "watch"]
            }
          }
        ]
    image-registry:
      type: string
      description: |
        Source registry of keystone auth images.

        By setting to a value, each image listed in the releases manifest
        has its image-registry replaced.

        If unset, the manifests will use the image registry from the kube-control relation

        example)
          juju config keystone-k8s-auth image-registry='rocks.canonical.com:443/cdk'
          juju config keystone-k8s-auth --reset image-registry
    release:
      type: string
      description: |
        Specify the version of keystone-k8s-auth as defined by the `release`
        tags of https://github.com/kubernetes/cloud-provider-openstack

        example)
          juju config keystone-k8s-auth release='v1.30.0'

        A list of supported versions is available through the action:
          juju run-action keystone-k8s-auth/leader list-releases --wait

        To reset by to the latest supported by the charm use:
          juju config keystone-k8s-auth --reset release

        The current release deployed is available by viewing
          juju status keystone-k8s-auth
    replicas:
      type: int
      description: |
        Number of pod replicas to run for the k8s-keystone-auth service.
      default: 2

actions:
  generate-webhook-config:
    description: Generate a webhook configuration for the k8s-keystone-auth service.
    params:
      fqdn:
        type: boolean
        default: False
        description: Get the in-cluster FQDN for the k8s-keystone-auth service.
  get-service-url:
    description: Get the active service URL for the k8s-keystone-auth service.
    params:
      fqdn:
        type: boolean
        default: False
        description: Get the in-cluster FQDN for the k8s-keystone-auth service.
  list-versions:
    description: List Storage Versions supported by this charm
  list-resources:
    description: List Storage Resources of configured version
    params:
      resources:
        type: string
        default: ""
        description: |
          Space separated list of kubernetes resource types to filter list result
  scrub-resources:
    description: Remove deployments other than the current one
    params:
      resources:
        type: string
        default: ""
        description: |
          Space separated list of kubernetes resource types to filter scrubbing
  sync-resources:
    description: |
      Add kubernetes resources which should be created by this charm which aren't
      present within the cluster.
    params:
      resources:
        type: string
        default: ""
        description: |
          Space separated list of kubernetes resource types
          to use a filter during the sync. This helps limit
          which missing resources are applied.

parts:
  charm:
    build-packages:
    - git
    charm-binary-python-packages: [importlib-metadata]
    charm-python-packages: [setuptools, pip]
    prime:
    - upstream/**
    - templates/**
